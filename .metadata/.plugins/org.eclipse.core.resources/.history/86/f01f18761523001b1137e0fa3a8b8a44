package task4;

import java.util.List;
import java.util.LinkedList;

public class IndentObserver implements Observer<Entry> {
//	
//	private int countDepth(Entry e) {
//        // 木構造eの中のEntryの数を返す．
//		int depth = 1;
//		for (Entry child : e.getChildren()) {
//			if (e.getChildren() != null) {
//				depth += countDepth(child);
//			}
//		}
//		return depth;
//    }
	
	
	private int countEn(Entry e) {
        // 木構造eの中のEntryの数を返す．
	int count = 1;
	for (Entry child : e.getChildren()) {
	    count += countEn((Entry) child.getChildren());
	}
	return count;
    }
	
//	private void printEntries(Entry e) {
//	    for (Entry child : e.getChildren()) {
//	    	   System.out.println(child.getName());
//	    	   printEntries(child);
//	       }
//	    	
//	    }
	
	private void printEntries(int depth, Entry e) {
	    for (Entry child : e.getChildren()) {
	    	for (int i = 0; i >= depth; i--) {
	    		System.out.print("   ");
	    	}
	    	depth = depth + 1;
	    	System.out.println(child.getName());
	    	printEntries(depth, child);
	    	
	    	   
	       }
	    	
	    }
	

//	  private void printEntries(int depth, Entry e) {
//	    
//	  }
    
    public void update(Entry e) {
    	int depth = 10;
//    	System.out.println(countEn(e));
//    
    	System.out.println("root");
    	printEntries(depth, e);
//    	System.out.println(e);
    }
}